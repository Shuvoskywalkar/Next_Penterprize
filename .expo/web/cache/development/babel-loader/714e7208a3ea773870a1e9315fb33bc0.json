{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === \"function\") {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nimport { mode } from \"../tools\";\n\nvar baseStyle = function baseStyle(props) {\n  var primary = props.theme.colors.primary;\n  var focusRing = mode({\n    boxShadow: \"\".concat(primary[400], \" 0px 0px 0px 2px\")\n  }, {\n    boxShadow: \"\".concat(primary[500], \" 0px 0px 0px 2px\")\n  })(props);\n  return {\n    _focusVisible: {\n      _web: {\n        style: _objectSpread({}, focusRing, {\n          outlineWidth: 0\n        })\n      }\n    }\n  };\n};\n\nexport default {\n  baseStyle: baseStyle,\n  defaultProps: {}\n};\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\Users\\88017\\directory2\\my-app\\node_modules\\native-base\\lib\\module\\theme\\components\\pressable.js"],"names":["mode","baseStyle","props","primary","theme","colors","focusRing","boxShadow","concat","_focusVisible","_web","style","outlineWidth","defaultProps"],"mappings":"AAAA,SAAA,eAAA,CAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,IAAT,QAAqB,UAArB;;AAEA,IAAMC,SAAS,GAAGC,SAAZD,SAAYC,CAAAA,KAAAA,EAAS;AACzB,MACEC,OAAO,GACLD,KAAK,CAACE,KAANF,CAAYG,MAAZH,CADFC,OADF;AAGA,MAAMG,SAAS,GAAGN,IAAI,CAAC;AACrBO,IAAAA,SAAS,EAAE,GAAGC,MAAH,CAAUL,OAAO,CAAC,GAAD,CAAjB,EAAwB,kBAAxB;AADU,GAAD,EAEnB;AACDI,IAAAA,SAAS,EAAE,GAAGC,MAAH,CAAUL,OAAO,CAAC,GAAD,CAAjB,EAAwB,kBAAxB;AADV,GAFmB,CAAJH,CAIfE,KAJeF,CAAlB;AAKA,SAAO;AACLS,IAAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAE,aAAA,CAAA,EAAA,EAAKL,SAAL,EAAc;AACnBM,UAAAA,YAAY,EAAE;AADK,SAAd;AADH;AADO;AADV,GAAP;AASA,CAlBF;;AAoBA,eAAe;AACbX,EAAAA,SAAS,EAATA,SADa;AAEbY,EAAAA,YAAY,EAAE;AAFD,CAAf","sourcesContent":["import { mode } from '../tools';\n\nconst baseStyle = props => {\n  const {\n    primary\n  } = props.theme.colors;\n  const focusRing = mode({\n    boxShadow: \"\".concat(primary[400], \" 0px 0px 0px 2px\")\n  }, {\n    boxShadow: \"\".concat(primary[500], \" 0px 0px 0px 2px\")\n  })(props);\n  return {\n    _focusVisible: {\n      _web: {\n        style: { ...focusRing,\n          outlineWidth: 0\n        }\n      }\n    }\n  };\n};\n\nexport default {\n  baseStyle,\n  defaultProps: {}\n};\n//# sourceMappingURL=pressable.js.map"]},"metadata":{},"sourceType":"module"}