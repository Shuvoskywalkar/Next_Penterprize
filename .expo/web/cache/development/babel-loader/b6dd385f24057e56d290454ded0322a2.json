{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeRefs = mergeRefs;\nexports.composeEventHandlers = composeEventHandlers;\n\nfunction mergeRefs(refs) {\n  return function (value) {\n    refs.forEach(function (ref) {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\nfunction composeEventHandlers(originalEventHandler, ourEventHandler) {\n  return function handleEvent(event) {\n    originalEventHandler === null || originalEventHandler === void 0 ? void 0 : originalEventHandler(event);\n    ourEventHandler === null || ourEventHandler === void 0 ? void 0 : ourEventHandler(event);\n  };\n}","map":{"version":3,"sources":["C:\\Users\\88017\\directory2\\my-app\\node_modules\\native-base\\lib\\commonjs\\utils\\mergeRefs.js"],"names":["Object","defineProperty","exports","value","mergeRefs","composeEventHandlers","refs","forEach","ref","current","originalEventHandler","ourEventHandler","handleEvent","event"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAPD,CAAsBE,OAAtBF,EAA+B,YAA/BA,EAA6C;AAC3CG,EAAAA,KAAK,EAAE;AADoC,CAA7CH;AAGAE,OAAO,CAACE,SAARF,GAAoBE,SAApBF;AACAA,OAAO,CAACG,oBAARH,GAA+BG,oBAA/BH;;AAEA,SAASE,SAAT,CAAmBE,IAAnB,EAAyB;AACvB,SAAOH,UAAAA,KAAAA,EAAS;AACdG,IAAAA,IAAI,CAACC,OAALD,CAAaE,UAAAA,GAAAA,EAAO;AAClB,UAAI,OAAOA,GAAP,KAAe,UAAnB,EAA+B;AAC7BA,QAAAA,GAAG,CAACL,KAAD,CAAHK;AACD,OAFD,MAEO,IAAIA,GAAG,IAAI,IAAX,EAAiB;AACtBA,QAAAA,GAAG,CAACC,OAAJD,GAAcL,KAAdK;AACD;AACF,KANDF;AAOD,GARD;AASD;;AAED,SAASD,oBAAT,CAA8BK,oBAA9B,EAAoDC,eAApD,EAAqE;AACnE,SAAO,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACjCH,IAAAA,oBAAoB,KAAK,IAAzBA,IAAiCA,oBAAoB,KAAK,KAAK,CAA/DA,GAAmE,KAAK,CAAxEA,GAA4EA,oBAAoB,CAACG,KAAD,CAAhGH;AACAC,IAAAA,eAAe,KAAK,IAApBA,IAA4BA,eAAe,KAAK,KAAK,CAArDA,GAAyD,KAAK,CAA9DA,GAAkEA,eAAe,CAACE,KAAD,CAAjFF;AACD,GAHD;AAID","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mergeRefs = mergeRefs;\nexports.composeEventHandlers = composeEventHandlers;\n\nfunction mergeRefs(refs) {\n  return value => {\n    refs.forEach(ref => {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}\n\nfunction composeEventHandlers(originalEventHandler, ourEventHandler) {\n  return function handleEvent(event) {\n    originalEventHandler === null || originalEventHandler === void 0 ? void 0 : originalEventHandler(event);\n    ourEventHandler === null || ourEventHandler === void 0 ? void 0 : ourEventHandler(event);\n  };\n}\n//# sourceMappingURL=mergeRefs.js.map"]},"metadata":{},"sourceType":"script"}