{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectDestructuringEmpty = require(\"@babel/runtime/helpers/objectDestructuringEmpty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractProps = extractProps;\nexports.mergeUnderscoreProps = mergeUnderscoreProps;\nexports.calculateProps = calculateProps;\nexports.resolveValueWithBreakpoint = exports.extractPropertyFromFunction = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.isnil\"));\n\nvar _lodash3 = _interopRequireDefault(require(\"lodash.mergewith\"));\n\nvar _lodash4 = _interopRequireDefault(require(\"lodash.clonedeep\"));\n\nvar _base = require(\"./../../theme/base\");\n\nvar _tools = require(\"./../../theme/tools\");\n\nvar _useContrastText = require(\"../useContrastText\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction extractProps(props, theme, _ref, componentTheme, currentBreakpoint) {\n  _objectDestructuringEmpty(_ref);\n\n  var newProps = {};\n\n  for (var property in props) {\n    if (_base.themePropertyMap[property]) {\n      var propValues = extractPropertyFromFunction(property, props, theme, componentTheme);\n\n      if (typeof propValues === \"string\" || typeof propValues === \"number\") {\n        newProps[property] = propValues;\n      } else if (!(0, _lodash2.default)(propValues)) {\n        for (var nestedProp in propValues) {\n          newProps[nestedProp] = (0, _lodash.default)(theme, \"\".concat(_base.themePropertyMap[nestedProp], \".\").concat(propValues[nestedProp]), propValues[nestedProp]);\n        }\n      } else if (property === \"shadow\") {\n        var shadowProps = theme[_base.themePropertyMap[property]][props[property]];\n\n        if (!(0, _lodash2.default)(shadowProps)) {\n          newProps = _objectSpread(_objectSpread({}, newProps), shadowProps);\n        }\n      } else {\n        newProps[property] = resolveValueWithBreakpoint(props[property], theme.breakpoints, currentBreakpoint, property);\n      }\n    } else {\n      newProps[property] = resolveValueWithBreakpoint(props[property], theme.breakpoints, currentBreakpoint, property);\n    }\n  }\n\n  return (0, _lodash4.default)(newProps);\n}\n\nfunction filterDefaultProps(props, defaultProps) {\n  var _ref2 = (0, _tools.extractInObject)(defaultProps, Object.keys(props)),\n      _ref3 = _slicedToArray(_ref2, 2),\n      resultProps = _ref3[1];\n\n  return resultProps;\n}\n\nvar extractPropertyFromFunction = function extractPropertyFromFunction(property, props, theme, componentTheme) {\n  var propValues;\n\n  if (componentTheme && typeof componentTheme[_base.themePropertyMap[property]] === \"function\") {\n    var funcProps = componentTheme[_base.themePropertyMap[property]](_objectSpread({\n      theme: theme\n    }, props));\n\n    var isNested = Object.keys(funcProps).some(function (key) {\n      return funcProps[key] && typeof funcProps[key] === \"object\";\n    });\n    propValues = isNested ? _objectSpread({}, (0, _lodash.default)(funcProps, \"\".concat(props[property]))) : _objectSpread({}, funcProps);\n  } else {\n    propValues = (0, _lodash.default)(componentTheme, \"\".concat(_base.themePropertyMap[property], \".\").concat(props[property]));\n  }\n\n  return propValues;\n};\n\nexports.extractPropertyFromFunction = extractPropertyFromFunction;\n\nfunction mergeUnderscoreProps(newProps, props) {\n  var _props = Object.keys(newProps).filter(function (propName) {\n    return propName.startsWith(\"_\");\n  });\n\n  _props.forEach(function (propName) {\n    var _newProps$bg, _newProps$propName$co, _newProps$propName, _props$propName;\n\n    var bg = (_newProps$bg = newProps.bg) !== null && _newProps$bg !== void 0 ? _newProps$bg : newProps.backgroundColor;\n    var textColor = bg ? {\n      color: (0, _useContrastText.useContrastText)(bg, (_newProps$propName$co = (_newProps$propName = newProps[propName]) === null || _newProps$propName === void 0 ? void 0 : _newProps$propName.color) !== null && _newProps$propName$co !== void 0 ? _newProps$propName$co : (_props$propName = props[propName]) === null || _props$propName === void 0 ? void 0 : _props$propName.color)\n    } : {};\n    newProps[propName] = _objectSpread(_objectSpread(_objectSpread({}, textColor), newProps[propName]), props[propName]);\n  });\n\n  return newProps;\n}\n\nvar resolveValueWithBreakpoint = function resolveValueWithBreakpoint(values, breakpointTheme, currentBreakpoint, property) {\n  if ((0, _tools.hasValidBreakpointFormat)(values, breakpointTheme, property)) {\n    return (0, _tools.findLastValidBreakpoint)(values, breakpointTheme, currentBreakpoint);\n  } else {\n    return values;\n  }\n};\n\nexports.resolveValueWithBreakpoint = resolveValueWithBreakpoint;\n\nfunction calculateProps(theme, colorModeProps, componentTheme, props, windowWidth) {\n  var currentBreakpoint = (0, _tools.getClosestBreakpoint)(theme.breakpoints, windowWidth);\n\n  if (!props) {\n    props = {};\n  }\n\n  var newProps;\n\n  if (componentTheme) {\n    newProps = extractProps(filterDefaultProps(props, componentTheme.defaultProps), theme, colorModeProps, componentTheme, currentBreakpoint);\n    var componentBaseStyle = typeof componentTheme.baseStyle !== \"function\" ? componentTheme.baseStyle : componentTheme.baseStyle(_objectSpread(_objectSpread(_objectSpread({\n      theme: theme\n    }, newProps), props), colorModeProps));\n    newProps = (0, _lodash3.default)(newProps, componentBaseStyle, function (objValue, srcValue, key) {\n      if (!(0, _lodash2.default)(objValue)) {\n        delete newProps[key];\n      }\n    });\n    var variant = props.variant || (0, _lodash.default)(componentTheme, \"defaultProps.variant\");\n\n    if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n      var colorScheme = props.colorScheme || (0, _lodash.default)(componentTheme, \"defaultProps.colorScheme\");\n      var variantProps = componentTheme.variants[variant](_objectSpread(_objectSpread(_objectSpread({}, props), newProps), {}, {\n        colorScheme: colorScheme,\n        theme: theme\n      }, colorModeProps));\n      variantProps = extractProps(variantProps, theme, colorModeProps, componentTheme, currentBreakpoint);\n      newProps = (0, _lodash3.default)(newProps, variantProps, function (objValue, srcValue, key) {\n        if (!(0, _lodash2.default)(objValue)) {\n          delete newProps[key];\n        }\n      });\n      delete newProps.variant;\n      delete newProps.colorScheme;\n    }\n  }\n\n  var extractedProps = extractProps(props, theme, colorModeProps, componentTheme, currentBreakpoint);\n  newProps = (0, _lodash3.default)(newProps, extractedProps, function (objValue, srcValue, key) {\n    if (!(0, _lodash2.default)(objValue)) {\n      delete newProps[key];\n    }\n  });\n  newProps = mergeUnderscoreProps(newProps, props);\n  return newProps;\n}","map":{"version":3,"sources":["C:\\Users\\88017\\directory2\\my-app\\node_modules\\native-base\\lib\\commonjs\\hooks\\useThemeProps\\utils.js"],"names":["Object","defineProperty","exports","value","extractProps","mergeUnderscoreProps","calculateProps","resolveValueWithBreakpoint","extractPropertyFromFunction","_lodash","_interopRequireDefault","require","_lodash2","_lodash3","_lodash4","_base","_tools","_useContrastText","obj","__esModule","default","props","theme","componentTheme","currentBreakpoint","newProps","property","themePropertyMap","propValues","nestedProp","concat","shadowProps","breakpoints","filterDefaultProps","defaultProps","resultProps","extractInObject","keys","funcProps","isNested","some","key","_props","filter","propName","startsWith","forEach","_newProps$bg","_newProps$propName$co","_newProps$propName","_props$propName","bg","backgroundColor","textColor","color","useContrastText","values","breakpointTheme","hasValidBreakpointFormat","findLastValidBreakpoint","colorModeProps","windowWidth","getClosestBreakpoint","componentBaseStyle","baseStyle","objValue","srcValue","variant","variants","colorScheme","variantProps","extractedProps"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractProps = extractProps;\nexports.mergeUnderscoreProps = mergeUnderscoreProps;\nexports.calculateProps = calculateProps;\nexports.resolveValueWithBreakpoint = exports.extractPropertyFromFunction = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.isnil\"));\n\nvar _lodash3 = _interopRequireDefault(require(\"lodash.mergewith\"));\n\nvar _lodash4 = _interopRequireDefault(require(\"lodash.clonedeep\"));\n\nvar _base = require(\"./../../theme/base\");\n\nvar _tools = require(\"./../../theme/tools\");\n\nvar _useContrastText = require(\"../useContrastText\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n Extract props from theme props and omit those from props\n*/\n\n/**\n *\n * @param props Props passed by the user\n * @param theme Theme object\n * @param colorModeProps `colorMode` object\n * @param componentTheme Theme for specific components\n * @param currentBreakpoint Current breakpoint values\n * @returns Extracting props from defaultProps while overriding the props that are already present\n */\nfunction extractProps(props, theme, {}, componentTheme, currentBreakpoint) {\n  let newProps = {};\n\n  for (let property in props) {\n    // If the property exists in themePropertyMap then get its value\n    if (_base.themePropertyMap[property]) {\n      let propValues = extractPropertyFromFunction(property, props, theme, componentTheme);\n\n      if (typeof propValues === 'string' || typeof propValues === 'number') {\n        newProps[property] = propValues;\n      } else if (!(0, _lodash2.default)(propValues)) {\n        for (let nestedProp in propValues) {\n          newProps[nestedProp] = (0, _lodash.default)(theme, \"\".concat(_base.themePropertyMap[nestedProp], \".\").concat(propValues[nestedProp]), propValues[nestedProp]);\n        }\n      } else if (property === 'shadow') {\n        let shadowProps = theme[_base.themePropertyMap[property]][props[property]];\n\n        if (!(0, _lodash2.default)(shadowProps)) {\n          newProps = { ...newProps,\n            ...shadowProps\n          };\n        }\n      } else {\n        newProps[property] = resolveValueWithBreakpoint(props[property], theme.breakpoints, currentBreakpoint, property);\n      }\n    } else {\n      newProps[property] = resolveValueWithBreakpoint(props[property], theme.breakpoints, currentBreakpoint, property);\n    }\n  }\n\n  return (0, _lodash4.default)(newProps);\n}\n/*\nRemove props from defaultProps that are already present in props\n*/\n\n\nfunction filterDefaultProps(props, defaultProps) {\n  let [, resultProps] = (0, _tools.extractInObject)(defaultProps, Object.keys(props));\n  return resultProps;\n}\n/**\n * If property is functional in componentTheme, get its returned object\n *\n * @param property : name of the prop\n * @param props : all props\n * @param theme : provided theme without components\n * @param componentTheme : component specific theme\n * @returns\n */\n\n\nconst extractPropertyFromFunction = (property, props, theme, componentTheme) => {\n  let propValues; // Check if the entry in the theme is a function then calling it with all theme and props as params\n\n  if (componentTheme && typeof componentTheme[_base.themePropertyMap[property]] === 'function') {\n    let funcProps = componentTheme[_base.themePropertyMap[property]]({\n      theme,\n      ...props\n    }); // Check if returned object from componentTheme is a nested object\n\n\n    let isNested = Object.keys(funcProps).some(function (key) {\n      return funcProps[key] && typeof funcProps[key] === 'object';\n    }); // If the returned value is nested object then find the property value in it, otherwise return the whole object\n\n    propValues = isNested ? { ...(0, _lodash.default)(funcProps, \"\".concat(props[property]))\n    } : { ...funcProps\n    };\n  } else {\n    // If the entry is any value other than function then return the whole object or value\n    propValues = (0, _lodash.default)(componentTheme, \"\".concat(_base.themePropertyMap[property], \".\").concat(props[property]));\n  }\n\n  return propValues;\n};\n/*\nMerge _props and apply contrastText color if not passed by theme or user\n*/\n\n\nexports.extractPropertyFromFunction = extractPropertyFromFunction;\n\nfunction mergeUnderscoreProps(newProps, props) {\n  const _props = Object.keys(newProps).filter(propName => propName.startsWith('_'));\n\n  _props.forEach(propName => {\n    var _newProps$bg, _newProps$propName$co, _newProps$propName, _props$propName;\n\n    // Adding color based on bg contrast if no color is given\n    const bg = (_newProps$bg = newProps.bg) !== null && _newProps$bg !== void 0 ? _newProps$bg : newProps.backgroundColor;\n    const textColor = bg ? {\n      color: (0, _useContrastText.useContrastText)(bg, (_newProps$propName$co = (_newProps$propName = newProps[propName]) === null || _newProps$propName === void 0 ? void 0 : _newProps$propName.color) !== null && _newProps$propName$co !== void 0 ? _newProps$propName$co : (_props$propName = props[propName]) === null || _props$propName === void 0 ? void 0 : _props$propName.color)\n    } : {}; // Overriding calculated props with user added props\n\n    newProps[propName] = { ...textColor,\n      ...newProps[propName],\n      ...props[propName]\n    };\n  });\n\n  return newProps;\n}\n/**\n *\n * Checks the property and resolves it if it has breakpoints\n * @param values : value from props\n * @param currentBreakpoint : current value for which breakpoint will be calculated\n * @param property : property name\n * @returns\n */\n\n\nconst resolveValueWithBreakpoint = (values, breakpointTheme, currentBreakpoint, property) => {\n  if ((0, _tools.hasValidBreakpointFormat)(values, breakpointTheme, property)) {\n    // Check the last valid breakpoint value from all values\n    // If current breakpoint is `md` and we have `base` then `lg`, then last value will be taken(`base` in this case)\n    return (0, _tools.findLastValidBreakpoint)(values, breakpointTheme, currentBreakpoint);\n  } else {\n    return values;\n  }\n};\n/**\n * Takes all prop related data and returns the props that needs to be applied to the component\n *\n * @param theme Theme object\n * @param colorModeProps Color mode information\n * @param componentTheme Theme object for the specific component\n * @param props Props passed by the user\n * @param windowWidth Width of the current window\n * @returns props to be applied\n */\n\n\nexports.resolveValueWithBreakpoint = resolveValueWithBreakpoint;\n\nfunction calculateProps(theme, colorModeProps, componentTheme, props, windowWidth) {\n  let currentBreakpoint = (0, _tools.getClosestBreakpoint)(theme.breakpoints, windowWidth);\n\n  if (!props) {\n    props = {};\n  }\n\n  let newProps;\n\n  if (componentTheme) {\n    // Extracting props from defaultProps\n    newProps = extractProps(filterDefaultProps(props, componentTheme.defaultProps), theme, colorModeProps, componentTheme, currentBreakpoint); // Extracting props from base style\n\n    let componentBaseStyle = typeof componentTheme.baseStyle !== 'function' ? componentTheme.baseStyle : componentTheme.baseStyle({\n      theme,\n      ...newProps,\n      ...props,\n      ...colorModeProps\n    });\n    newProps = (0, _lodash3.default)(newProps, componentBaseStyle, // @ts-ignore\n    (objValue, srcValue, key) => {\n      if (!(0, _lodash2.default)(objValue)) {\n        delete newProps[key];\n      }\n    });\n    const variant = props.variant || (0, _lodash.default)(componentTheme, 'defaultProps.variant'); // Extracting props from variant\n\n    if (variant && componentTheme.variants && componentTheme.variants[variant]) {\n      const colorScheme = props.colorScheme || (0, _lodash.default)(componentTheme, 'defaultProps.colorScheme');\n      let variantProps = componentTheme.variants[variant]({ ...props,\n        ...newProps,\n        colorScheme,\n        theme,\n        ...colorModeProps\n      });\n      variantProps = extractProps(variantProps, theme, colorModeProps, componentTheme, currentBreakpoint); // added this to handle order of props\n\n      newProps = (0, _lodash3.default)(newProps, variantProps, // @ts-ignore\n      (objValue, srcValue, key) => {\n        if (!(0, _lodash2.default)(objValue)) {\n          delete newProps[key];\n        }\n      });\n      delete newProps.variant;\n      delete newProps.colorScheme;\n    }\n  } // Extracting props from normal props\n\n\n  let extractedProps = extractProps(props, theme, colorModeProps, componentTheme, currentBreakpoint); // added this to handle order of props\n  // @ts-ignore\n\n  newProps = (0, _lodash3.default)(newProps, extractedProps, (objValue, srcValue, key) => {\n    if (!(0, _lodash2.default)(objValue)) {\n      delete newProps[key];\n    }\n  });\n  newProps = mergeUnderscoreProps(newProps, props);\n  return newProps;\n}\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}