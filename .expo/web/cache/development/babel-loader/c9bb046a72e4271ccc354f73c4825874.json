{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDimensionsWithEnable = exports.getResponsiveStylesImpl = void 0;\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getResponsiveStylesImpl = function getResponsiveStylesImpl(width) {\n  return function (queries) {\n    if (typeof width === \"number\") {\n      var styles = queries.initial ? [_reactNative.StyleSheet.create({\n        initial: _reactNative.StyleSheet.flatten(queries.initial)\n      }).initial] : [];\n\n      if (queries.query) {\n        queries.query.forEach(function (queryRule) {\n          if (queryRule.style) {\n            var flattenQueryStyle = _reactNative.StyleSheet.flatten(queryRule.style);\n\n            if (typeof queryRule.maxWidth === \"number\" && typeof queryRule.minWidth === \"number\") {\n              if (width >= queryRule.minWidth && width <= queryRule.maxWidth) {\n                styles.push(_reactNative.StyleSheet.create({\n                  rangeStyle: flattenQueryStyle\n                }).rangeStyle);\n              }\n            } else if (typeof queryRule.minWidth === \"number\") {\n              if (width >= queryRule.minWidth) {\n                styles.push(_reactNative.StyleSheet.create({\n                  minWidthStyle: flattenQueryStyle\n                }).minWidthStyle);\n              }\n            } else if (typeof queryRule.maxWidth === \"number\") {\n              if (width <= queryRule.maxWidth) {\n                styles.push(_reactNative.StyleSheet.create({\n                  maxWidthStyle: flattenQueryStyle\n                }).maxWidthStyle);\n              }\n            }\n          }\n        });\n        return {\n          styles: styles\n        };\n      }\n    }\n\n    return {};\n  };\n};\n\nexports.getResponsiveStylesImpl = getResponsiveStylesImpl;\n\nvar useDimensionsWithEnable = function useDimensionsWithEnable(_ref) {\n  var enable = _ref.enable;\n\n  var _react$default$useSta = _react.default.useState(function () {\n    return _reactNative.Dimensions.get(\"window\");\n  }),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      dimensions = _react$default$useSta2[0],\n      setDimensions = _react$default$useSta2[1];\n\n  _react.default.useEffect(function () {\n    if (enable) {\n      function handleChange(_ref2) {\n        var window = _ref2.window;\n\n        if (dimensions.width !== window.width || dimensions.height !== window.height || dimensions.scale !== window.scale || dimensions.fontScale !== window.fontScale) {\n          setDimensions(window);\n        }\n      }\n\n      _reactNative.Dimensions.addEventListener(\"change\", handleChange);\n\n      handleChange({\n        window: _reactNative.Dimensions.get(\"window\")\n      });\n      return function () {\n        _reactNative.Dimensions.removeEventListener(\"change\", handleChange);\n      };\n    }\n\n    return function () {};\n  }, [dimensions, enable]);\n\n  return dimensions;\n};\n\nexports.useDimensionsWithEnable = useDimensionsWithEnable;","map":{"version":3,"sources":["C:\\Users\\88017\\directory2\\my-app\\node_modules\\native-base\\lib\\commonjs\\utils\\useResponsiveQuery\\common.js"],"names":["Object","defineProperty","exports","value","useDimensionsWithEnable","getResponsiveStylesImpl","_react","_interopRequireDefault","require","obj","__esModule","default","width","queries","styles","initial","_reactNative","StyleSheet","create","flatten","query","forEach","queryRule","style","flattenQueryStyle","maxWidth","minWidth","push","rangeStyle","minWidthStyle","maxWidthStyle","enable","dimensions","setDimensions","useState","Dimensions","get","useEffect","handleChange","window","height","scale","fontScale","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDimensionsWithEnable = exports.getResponsiveStylesImpl = void 0;\n\nvar _reactNative = require(\"react-native\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getResponsiveStylesImpl = width => queries => {\n  if (typeof width === 'number') {\n    let styles = queries.initial ? [_reactNative.StyleSheet.create({\n      initial: _reactNative.StyleSheet.flatten(queries.initial)\n    }).initial] : [];\n\n    if (queries.query) {\n      queries.query.forEach(queryRule => {\n        if (queryRule.style) {\n          const flattenQueryStyle = _reactNative.StyleSheet.flatten(queryRule.style);\n\n          if (typeof queryRule.maxWidth === 'number' && typeof queryRule.minWidth === 'number') {\n            if (width >= queryRule.minWidth && width <= queryRule.maxWidth) {\n              styles.push(_reactNative.StyleSheet.create({\n                rangeStyle: flattenQueryStyle\n              }).rangeStyle);\n            }\n          } else if (typeof queryRule.minWidth === 'number') {\n            if (width >= queryRule.minWidth) {\n              styles.push(_reactNative.StyleSheet.create({\n                minWidthStyle: flattenQueryStyle\n              }).minWidthStyle);\n            }\n          } else if (typeof queryRule.maxWidth === 'number') {\n            if (width <= queryRule.maxWidth) {\n              styles.push(_reactNative.StyleSheet.create({\n                maxWidthStyle: flattenQueryStyle\n              }).maxWidthStyle);\n            }\n          }\n        }\n      });\n      return {\n        styles\n      };\n    }\n  }\n\n  return {};\n}; // The below implementation is taken from React Native's source and added a flag to conditionally attach/remove listeners\n\n\nexports.getResponsiveStylesImpl = getResponsiveStylesImpl;\n\nconst useDimensionsWithEnable = ({\n  enable\n}) => {\n  const [dimensions, setDimensions] = _react.default.useState(() => _reactNative.Dimensions.get('window'));\n\n  _react.default.useEffect(() => {\n    if (enable) {\n      function handleChange({\n        window\n      }) {\n        if (dimensions.width !== window.width || dimensions.height !== window.height || dimensions.scale !== window.scale || dimensions.fontScale !== window.fontScale) {\n          setDimensions(window);\n        }\n      }\n\n      _reactNative.Dimensions.addEventListener('change', handleChange); // We might have missed an update between calling `get` in render and\n      // `addEventListener` in this handler, so we set it here. If there was\n      // no change, React will filter out this update as a no-op.\n\n\n      handleChange({\n        window: _reactNative.Dimensions.get('window')\n      });\n      return () => {\n        _reactNative.Dimensions.removeEventListener('change', handleChange);\n      };\n    }\n\n    return () => {};\n  }, [dimensions, enable]);\n\n  return dimensions;\n};\n\nexports.useDimensionsWithEnable = useDimensionsWithEnable;\n//# sourceMappingURL=common.js.map"]},"metadata":{},"sourceType":"script"}