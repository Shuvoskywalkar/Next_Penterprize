{"ast":null,"code":"function murmurhash2_32_gc(str, seed) {\n  var l = str.length,\n      h = seed ^ l,\n      i = 0,\n      k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 255 | (str.charCodeAt(++i) & 255) << 8 | (str.charCodeAt(++i) & 255) << 16 | (str.charCodeAt(++i) & 255) << 24;\n    k = (k & 65535) * 1540483477 + (((k >>> 16) * 1540483477 & 65535) << 16);\n    k ^= k >>> 24;\n    k = (k & 65535) * 1540483477 + (((k >>> 16) * 1540483477 & 65535) << 16);\n    h = (h & 65535) * 1540483477 + (((h >>> 16) * 1540483477 & 65535) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 255) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 255) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 255;\n      h = (h & 65535) * 1540483477 + (((h >>> 16) * 1540483477 & 65535) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 65535) * 1540483477 + (((h >>> 16) * 1540483477 & 65535) << 16);\n  h ^= h >>> 15;\n  return h >>> 0;\n}\n\nvar hash = function hash(str) {\n  return murmurhash2_32_gc(str, 1).toString(36);\n};\n\nexport default hash;\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\Users\\88017\\directory2\\my-app\\node_modules\\react-native-web\\dist\\vendor\\hash\\index.js"],"names":["murmurhash2_32_gc","str","seed","l","length","h","i","k","charCodeAt","hash","toString"],"mappings":"AAgBA,SAASA,iBAAT,CAA2BC,GAA3B,EAAgCC,IAAhC,EAAsC;AACpC,MAAIC,CAAC,GAAGF,GAAG,CAACG,MAAZ;AAAA,MACIC,CAAC,GAAGH,IAAI,GAAGC,CADf;AAAA,MAEIG,CAAC,GAAG,CAFR;AAAA,MAGIC,CAHJ;;AAKA,SAAOJ,CAAC,IAAI,CAAZ,EAAe;AACbI,IAAAA,CAAC,GAAGN,GAAG,CAACO,UAAJP,CAAeK,CAAfL,IAAoB,GAApBA,GAA2B,CAACA,GAAG,CAACO,UAAJP,CAAe,EAAEK,CAAjBL,IAAsB,GAAvB,KAAgC,CAA3DA,GAA+D,CAACA,GAAG,CAACO,UAAJP,CAAe,EAAEK,CAAjBL,IAAsB,GAAvB,KAAgC,EAA/FA,GAAoG,CAACA,GAAG,CAACO,UAAJP,CAAe,EAAEK,CAAjBL,IAAsB,GAAvB,KAAgC,EAAxIM;AACAA,IAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,KAAL,IAAe,UAAf,IAA6B,CAAC,CAACA,CAAC,KAAK,EAAP,IAAa,UAAb,GAA0B,KAA3B,KAAsC,EAAnE,CAAJA;AACAA,IAAAA,CAAC,IAAIA,CAAC,KAAK,EAAXA;AACAA,IAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,KAAL,IAAe,UAAf,IAA6B,CAAC,CAACA,CAAC,KAAK,EAAP,IAAa,UAAb,GAA0B,KAA3B,KAAsC,EAAnE,CAAJA;AACAF,IAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,KAAL,IAAe,UAAf,IAA6B,CAAC,CAACA,CAAC,KAAK,EAAP,IAAa,UAAb,GAA0B,KAA3B,KAAsC,EAAnE,IAAyEE,CAA7EF;AACAF,IAAAA,CAAC,IAAI,CAALA;AACA,MAAEG,CAAF;AACD;;AAED,UAAQH,CAAR;AACE,SAAK,CAAL;AACEE,MAAAA,CAAC,IAAI,CAACJ,GAAG,CAACO,UAAJP,CAAeK,CAAC,GAAG,CAAnBL,IAAwB,GAAzB,KAAkC,EAAvCI;;AAEF,SAAK,CAAL;AACEA,MAAAA,CAAC,IAAI,CAACJ,GAAG,CAACO,UAAJP,CAAeK,CAAC,GAAG,CAAnBL,IAAwB,GAAzB,KAAkC,CAAvCI;;AAEF,SAAK,CAAL;AACEA,MAAAA,CAAC,IAAIJ,GAAG,CAACO,UAAJP,CAAeK,CAAfL,IAAoB,GAAzBI;AACAA,MAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,KAAL,IAAe,UAAf,IAA6B,CAAC,CAACA,CAAC,KAAK,EAAP,IAAa,UAAb,GAA0B,KAA3B,KAAsC,EAAnE,CAAJA;AATJ;;AAYAA,EAAAA,CAAC,IAAIA,CAAC,KAAK,EAAXA;AACAA,EAAAA,CAAC,GAAG,CAACA,CAAC,GAAG,KAAL,IAAe,UAAf,IAA6B,CAAC,CAACA,CAAC,KAAK,EAAP,IAAa,UAAb,GAA0B,KAA3B,KAAsC,EAAnE,CAAJA;AACAA,EAAAA,CAAC,IAAIA,CAAC,KAAK,EAAXA;AACA,SAAOA,CAAC,KAAK,CAAb;AACD;;AAED,IAAII,IAAI,GAAG,SAASA,IAAT,CAAcR,GAAd,EAAmB;AAC5B,SAAOD,iBAAiB,CAACC,GAAD,EAAM,CAAN,CAAjBD,CAA0BU,QAA1BV,CAAmC,EAAnCA,CAAP;AACA,CAFF;;AAIA,eAAeS,IAAf","sourcesContent":["/* eslint-disable */\n\n/**\n * JS Implementation of MurmurHash2\n *\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/murmurhash-js\n * @author <a href=\"mailto:aappleby@gmail.com\">Austin Appleby</a>\n * @see http://sites.google.com/site/murmurhash/\n *\n * @param {string} str ASCII only\n * @param {number} seed Positive integer only\n * @return {number} 32-bit positive integer hash\n *\n * \n */\nfunction murmurhash2_32_gc(str, seed) {\n  var l = str.length,\n      h = seed ^ l,\n      i = 0,\n      k;\n\n  while (l >= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    k ^= k >>> 24;\n    k = (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n    h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16) ^ k;\n    l -= 4;\n    ++i;\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  }\n\n  h ^= h >>> 13;\n  h = (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0x5bd1e995 & 0xffff) << 16);\n  h ^= h >>> 15;\n  return h >>> 0;\n}\n\nvar hash = function hash(str) {\n  return murmurhash2_32_gc(str, 1).toString(36);\n};\n\nexport default hash;"]},"metadata":{},"sourceType":"module"}