{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLink = useLink;\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar linkToHREF = function linkToHREF(URL) {\n  _reactNative.Linking.openURL(URL).catch(function (err) {\n    return console.error(\"An error occurred\", err);\n  });\n};\n\nvar addOnPressFunctionality = function addOnPressFunctionality(href, callback) {\n  href ? linkToHREF(href) : \"\";\n  callback ? callback() : function () {};\n};\n\nfunction useLink(props) {\n  var href = props.href,\n      isExternal = props.isExternal,\n      _onPress = props.onPress,\n      _ref = props._ref;\n  var platformLinkProps = {};\n\n  if (_reactNative.Platform.OS === \"web\") {\n    platformLinkProps = {\n      href: href,\n      onClick: _onPress\n    };\n\n    if (isExternal && _ref.current) {\n      _ref.current.target = \"_blank\";\n    }\n  } else {\n    platformLinkProps = {\n      onPress: function onPress() {\n        addOnPressFunctionality(href, _onPress);\n      }\n    };\n  }\n\n  return {\n    linkProps: _objectSpread(_objectSpread({}, platformLinkProps), {}, {\n      accessibilityRole: \"link\",\n      accessible: true\n    })\n  };\n}","map":{"version":3,"sources":["C:\\Users\\88017\\directory2\\my-app\\node_modules\\native-base\\lib\\commonjs\\components\\primitives\\Link\\useLink.js"],"names":["Object","defineProperty","exports","value","useLink","linkToHREF","URL","_reactNative","Linking","openURL","catch","err","console","error","addOnPressFunctionality","href","callback","props","isExternal","onPress","_ref","platformLinkProps","Platform","OS","onClick","current","target","linkProps","accessibilityRole","accessible"],"mappings":"AAAA;;;;;;;;AAEAA,MAAM,CAACC,cAAPD,CAAsBE,OAAtBF,EAA+B,YAA/BA,EAA6C;AAC3CG,EAAAA,KAAK,EAAE;AADoC,CAA7CH;AAGAE,OAAO,CAACE,OAARF,GAAkBE,OAAlBF;;;;AAIA,IAAMG,UAAU,GAAGC,SAAbD,UAAaC,CAAAA,GAAAA,EAAO;AACxBC,EAAAA,YAAY,CAACC,OAAbD,CAAqBE,OAArBF,CAA6BD,GAA7BC,EAAkCG,KAAlCH,CAAwCI,UAAAA,GAAAA;AAAAA,WAAOC,OAAO,CAACC,KAARD,CAAc,mBAAdA,EAAmCD,GAAnCC,CAAPD;AAAAA,GAAxCJ;AACA,CAFF;;AAIA,IAAMO,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,IAAD,EAAOC,QAAP,EAAoB;AAClDD,EAAAA,IAAI,GAAGV,UAAU,CAACU,IAAD,CAAb,GAAsB,EAA1BA;AACAC,EAAAA,QAAQ,GAAGA,QAAQ,EAAX,GAAgB,YAAM,CAAE,CAAhCA;AACA,CAHF;;AAKA,SAASZ,OAAT,CAAiBa,KAAjB,EAAwB;AACtB,MACEF,IADF,GAKIE,KALJ,CACEF,IADF;AAAA,MAEEG,UAFF,GAKID,KALJ,CAEEC,UAFF;AAAA,MAGEC,QAHF,GAKIF,KALJ,CAGEE,OAHF;AAAA,MAIEC,IAJF,GAKIH,KALJ,CAIEG,IAJF;AAMA,MAAIC,iBAAiB,GAAG,EAAxB;;AAEA,MAAId,YAAY,CAACe,QAAbf,CAAsBgB,EAAtBhB,KAA6B,KAAjC,EAAwC;AACtCc,IAAAA,iBAAiB,GAAG;AAClBN,MAAAA,IAAI,EAAJA,IADkB;AAElBS,MAAAA,OAAO,EAAEL;AAFS,KAApBE;;AAKA,QAAIH,UAAU,IAAIE,IAAI,CAACK,OAAvB,EAAgC;AAC9BL,MAAAA,IAAI,CAACK,OAALL,CAAaM,MAAbN,GAAsB,QAAtBA;AACD;AACF,GATD,MASO;AACLC,IAAAA,iBAAiB,GAAG;AAClBF,MAAAA,OAAO,EAAE,mBAAM;AACbL,QAAAA,uBAAuB,CAACC,IAAD,EAAOI,QAAP,CAAvBL;AACD;AAHiB,KAApBO;AAKD;;AAED,SAAO;AACLM,IAAAA,SAAS,kCAAON,iBAAP;AACPO,MAAAA,iBAAiB,EAAE,MADZ;AAEPC,MAAAA,UAAU,EAAE;AAFL;AADJ,GAAP;AAMD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLink = useLink;\n\nvar _reactNative = require(\"react-native\");\n\nconst linkToHREF = URL => {\n  _reactNative.Linking.openURL(URL).catch(err => console.error('An error occurred', err));\n};\n\nconst addOnPressFunctionality = (href, callback) => {\n  href ? linkToHREF(href) : '';\n  callback ? callback() : () => {};\n};\n\nfunction useLink(props) {\n  const {\n    href,\n    isExternal,\n    onPress,\n    _ref\n  } = props;\n  let platformLinkProps = {};\n\n  if (_reactNative.Platform.OS === 'web') {\n    platformLinkProps = {\n      href,\n      onClick: onPress\n    }; // Adding target to a tag created by RN-Web\n\n    if (isExternal && _ref.current) {\n      _ref.current.target = '_blank';\n    }\n  } else {\n    platformLinkProps = {\n      onPress: () => {\n        addOnPressFunctionality(href, onPress);\n      }\n    };\n  }\n\n  return {\n    linkProps: { ...platformLinkProps,\n      accessibilityRole: 'link',\n      accessible: true\n    }\n  };\n}\n//# sourceMappingURL=useLink.js.map"]},"metadata":{},"sourceType":"script"}