{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NativeBaseProvider = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _utils = require(\"@react-native-aria/utils\");\n\nvar _theme = require(\"./../theme\");\n\nvar _HybridProvider = _interopRequireDefault(require(\"./hybrid-overlay/HybridProvider\"));\n\nvar _overlays = require(\"@react-native-aria/overlays\");\n\nvar _Toast = require(\"../components/composites/Toast\");\n\nvar _NativeBaseContext = require(\"./NativeBaseContext\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _utils2 = require(\"../theme/tools/utils\");\n\nvar _useResponsiveQuery = require(\"../utils/useResponsiveQuery\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar defaultInitialWindowMetricsBasedOnPlatform = _reactNative.Platform.select({\n  web: {\n    frame: {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    },\n    insets: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }\n  },\n  default: _reactNativeSafeAreaContext.initialWindowMetrics\n});\n\nvar NativeBaseProvider = function NativeBaseProvider(props) {\n  var _config$theme, _useWindowDimensions;\n\n  var colorModeManager = props.colorModeManager,\n      _props$config = props.config,\n      config = _props$config === void 0 ? _NativeBaseContext.defaultConfig : _props$config,\n      children = props.children,\n      _props$theme = props.theme,\n      propsTheme = _props$theme === void 0 ? _theme.theme : _props$theme,\n      initialWindowMetrics = props.initialWindowMetrics,\n      isSSR = props.isSSR,\n      disableContrastText = props.disableContrastText;\n  var theme = (_config$theme = config.theme) !== null && _config$theme !== void 0 ? _config$theme : propsTheme;\n\n  var newTheme = _react.default.useMemo(function () {\n    if (config.enableRem) {\n      return (0, _utils2.platformSpecificSpaceUnits)(theme);\n    }\n\n    return theme;\n  }, [config.enableRem, theme]);\n\n  var windowWidth = (_useWindowDimensions = (0, _reactNative.useWindowDimensions)()) === null || _useWindowDimensions === void 0 ? void 0 : _useWindowDimensions.width;\n\n  var currentBreakpoint = _react.default.useMemo(function () {\n    return (0, _utils2.getClosestBreakpoint)(newTheme.breakpoints, windowWidth);\n  }, [windowWidth, newTheme.breakpoints]);\n\n  return _react.default.createElement(_NativeBaseContext.NativeBaseConfigProvider, {\n    theme: newTheme,\n    config: config,\n    currentBreakpoint: currentBreakpoint,\n    isSSR: isSSR,\n    disableContrastText: disableContrastText\n  }, _react.default.createElement(_reactNativeSafeAreaContext.SafeAreaProvider, {\n    initialMetrics: initialWindowMetrics !== null && initialWindowMetrics !== void 0 ? initialWindowMetrics : defaultInitialWindowMetricsBasedOnPlatform\n  }, _react.default.createElement(_useResponsiveQuery.ResponsiveQueryProvider, {\n    disableCSSMediaQueries: !isSSR\n  }, _react.default.createElement(_HybridProvider.default, {\n    colorModeManager: colorModeManager,\n    options: theme.config\n  }, _react.default.createElement(_overlays.OverlayProvider, null, _react.default.createElement(_Toast.ToastProvider, null, _react.default.createElement(InitializeToastRef, null), _react.default.createElement(_utils.SSRProvider, null, children)))))));\n};\n\nexports.NativeBaseProvider = NativeBaseProvider;\n\nvar InitializeToastRef = function InitializeToastRef() {\n  var toast = (0, _Toast.useToast)();\n  _Toast.ToastRef.current = toast;\n  return null;\n};","map":{"version":3,"sources":["C:\\Users\\88017\\directory2\\my-app\\node_modules\\native-base\\lib\\commonjs\\core\\NativeBaseProvider.js"],"names":["Object","defineProperty","exports","value","NativeBaseProvider","_react","_interopRequireDefault","require","_reactNativeSafeAreaContext","_utils","_theme","_HybridProvider","_overlays","_Toast","_NativeBaseContext","_utils2","_useResponsiveQuery","obj","__esModule","default","defaultInitialWindowMetricsBasedOnPlatform","_reactNative","Platform","select","web","frame","x","y","width","height","insets","top","left","right","bottom","initialWindowMetrics","props","_config$theme","_useWindowDimensions","colorModeManager","config","defaultConfig","children","theme","propsTheme","isSSR","disableContrastText","newTheme","useMemo","enableRem","platformSpecificSpaceUnits","windowWidth","useWindowDimensions","currentBreakpoint","getClosestBreakpoint","breakpoints","createElement","NativeBaseConfigProvider","SafeAreaProvider","initialMetrics","ResponsiveQueryProvider","disableCSSMediaQueries","options","OverlayProvider","ToastProvider","InitializeToastRef","SSRProvider","toast","useToast","ToastRef","current"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NativeBaseProvider = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _utils = require(\"@react-native-aria/utils\");\n\nvar _theme = require(\"./../theme\");\n\nvar _HybridProvider = _interopRequireDefault(require(\"./hybrid-overlay/HybridProvider\"));\n\nvar _overlays = require(\"@react-native-aria/overlays\");\n\nvar _Toast = require(\"../components/composites/Toast\");\n\nvar _NativeBaseContext = require(\"./NativeBaseContext\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _utils2 = require(\"../theme/tools/utils\");\n\nvar _useResponsiveQuery = require(\"../utils/useResponsiveQuery\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// For SSR to work, we need to pass initial insets as 0 values on web.\n// https://github.com/th3rdwave/react-native-safe-area-context/issues/132\nconst defaultInitialWindowMetricsBasedOnPlatform = _reactNative.Platform.select({\n  web: {\n    frame: {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0\n    },\n    insets: {\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    }\n  },\n  default: _reactNativeSafeAreaContext.initialWindowMetrics\n});\n\nconst NativeBaseProvider = props => {\n  var _config$theme, _useWindowDimensions;\n\n  const {\n    colorModeManager,\n    config = _NativeBaseContext.defaultConfig,\n    children,\n    theme: propsTheme = _theme.theme,\n    initialWindowMetrics,\n    isSSR,\n    disableContrastText\n  } = props;\n  const theme = (_config$theme = config.theme) !== null && _config$theme !== void 0 ? _config$theme : propsTheme;\n\n  const newTheme = _react.default.useMemo(() => {\n    if (config.enableRem) {\n      return (0, _utils2.platformSpecificSpaceUnits)(theme);\n    }\n\n    return theme;\n  }, [config.enableRem, theme]);\n\n  const windowWidth = (_useWindowDimensions = (0, _reactNative.useWindowDimensions)()) === null || _useWindowDimensions === void 0 ? void 0 : _useWindowDimensions.width;\n\n  const currentBreakpoint = _react.default.useMemo(() => (0, _utils2.getClosestBreakpoint)(newTheme.breakpoints, windowWidth), [windowWidth, newTheme.breakpoints]);\n\n  return /*#__PURE__*/_react.default.createElement(_NativeBaseContext.NativeBaseConfigProvider, {\n    theme: newTheme,\n    config: config,\n    currentBreakpoint: currentBreakpoint,\n    isSSR: isSSR,\n    disableContrastText: disableContrastText\n  }, /*#__PURE__*/_react.default.createElement(_reactNativeSafeAreaContext.SafeAreaProvider, {\n    initialMetrics: initialWindowMetrics !== null && initialWindowMetrics !== void 0 ? initialWindowMetrics : defaultInitialWindowMetricsBasedOnPlatform\n  }, /*#__PURE__*/_react.default.createElement(_useResponsiveQuery.ResponsiveQueryProvider, {\n    disableCSSMediaQueries: !isSSR\n  }, /*#__PURE__*/_react.default.createElement(_HybridProvider.default, {\n    colorModeManager: colorModeManager,\n    options: theme.config\n  }, /*#__PURE__*/_react.default.createElement(_overlays.OverlayProvider, null, /*#__PURE__*/_react.default.createElement(_Toast.ToastProvider, null, /*#__PURE__*/_react.default.createElement(InitializeToastRef, null), /*#__PURE__*/_react.default.createElement(_utils.SSRProvider, null, children)))))));\n};\n\nexports.NativeBaseProvider = NativeBaseProvider;\n\nconst InitializeToastRef = () => {\n  const toast = (0, _Toast.useToast)();\n  _Toast.ToastRef.current = toast;\n  return null;\n};\n//# sourceMappingURL=NativeBaseProvider.js.map"]},"metadata":{},"sourceType":"script"}