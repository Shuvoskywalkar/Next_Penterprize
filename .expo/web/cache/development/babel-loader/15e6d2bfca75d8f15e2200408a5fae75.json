{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Context = require(\"./Context\");\n\nvar _hooks = require(\"./../color-mode/hooks\");\n\nvar _hooks2 = require(\"../../hooks\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nvar HybridProvider = function HybridProvider(_ref) {\n  var children = _ref.children,\n      _ref$options = _ref.options,\n      _ref$options$initialC = _ref$options.initialColorMode,\n      initialColorMode = _ref$options$initialC === void 0 ? \"light\" : _ref$options$initialC,\n      _ref$options$accessib = _ref$options.accessibleColors,\n      isTextColorAccessible = _ref$options$accessib === void 0 ? false : _ref$options$accessib,\n      useSystemColorMode = _ref$options.useSystemColorMode,\n      colorModeManager = _ref.colorModeManager;\n\n  var _ref2 = (0, _hooks.useModeManager)(initialColorMode, useSystemColorMode, colorModeManager),\n      colorMode = _ref2.colorMode,\n      setColorMode = _ref2.setColorMode;\n\n  var toggleColorMode = _react.default.useCallback(function () {\n    setColorMode(colorMode === \"light\" ? \"dark\" : \"light\");\n  }, [colorMode, setColorMode]);\n\n  var _react$default$useSta = _react.default.useState(isTextColorAccessible),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      accessibleColors = _react$default$useSta2[0],\n      setAccessibleColors = _react$default$useSta2[1];\n\n  var contextValue = (0, _react.useMemo)(function () {\n    return {\n      colorMode: {\n        colorMode: colorMode,\n        toggleColorMode: toggleColorMode,\n        setColorMode: setColorMode,\n        accessibleColors: accessibleColors,\n        setAccessibleColors: setAccessibleColors\n      }\n    };\n  }, [colorMode, toggleColorMode, setColorMode, accessibleColors, setAccessibleColors]);\n\n  _react.default.useEffect(function () {\n    var escapeKeyListener = null;\n\n    if (_reactNative.Platform.OS === \"web\") {\n      escapeKeyListener = function escapeKeyListener(e) {\n        if (e.key === \"Escape\") {\n          if (_hooks2.keyboardDismissHandlerManager.length() > 0) {\n            var lastHandler = _hooks2.keyboardDismissHandlerManager.pop();\n\n            lastHandler();\n          }\n        }\n      };\n\n      document.addEventListener(\"keydown\", escapeKeyListener);\n    }\n\n    return function () {\n      if (_reactNative.Platform.OS === \"web\") {\n        document.removeEventListener(\"keydown\", escapeKeyListener);\n      }\n    };\n  }, []);\n\n  return _react.default.createElement(_Context.HybridContext.Provider, {\n    value: contextValue\n  }, children);\n};\n\nvar _default = HybridProvider;\nexports.default = _default;","map":{"version":3,"sources":["C:\\Users\\88017\\directory2\\my-app\\node_modules\\native-base\\lib\\commonjs\\core\\hybrid-overlay\\HybridProvider.js"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireWildcard","require","_Context","_hooks","_hooks2","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","HybridProvider","children","options","initialColorMode","accessibleColors","isTextColorAccessible","useSystemColorMode","colorModeManager","colorMode","setColorMode","useModeManager","toggleColorMode","useCallback","setAccessibleColors","useState","contextValue","useMemo","useEffect","escapeKeyListener","_reactNative","Platform","OS","e","keyboardDismissHandlerManager","length","lastHandler","pop","document","addEventListener","removeEventListener","createElement","HybridContext","Provider","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Context = require(\"./Context\");\n\nvar _hooks = require(\"./../color-mode/hooks\");\n\nvar _hooks2 = require(\"../../hooks\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst HybridProvider = ({\n  children,\n  options: {\n    initialColorMode = 'light',\n    accessibleColors: isTextColorAccessible = false,\n    useSystemColorMode\n  },\n  colorModeManager\n}) => {\n  // Color-mode content\n  const {\n    colorMode,\n    setColorMode\n  } = (0, _hooks.useModeManager)(initialColorMode, useSystemColorMode, colorModeManager);\n\n  const toggleColorMode = _react.default.useCallback(() => {\n    setColorMode(colorMode === 'light' ? 'dark' : 'light');\n  }, [colorMode, setColorMode]); // Accessible color hook\n\n\n  const [accessibleColors, setAccessibleColors] = _react.default.useState(isTextColorAccessible);\n\n  const contextValue = (0, _react.useMemo)(() => {\n    return {\n      colorMode: {\n        colorMode,\n        toggleColorMode,\n        setColorMode,\n        accessibleColors,\n        setAccessibleColors\n      }\n    };\n  }, [colorMode, toggleColorMode, setColorMode, accessibleColors, setAccessibleColors]);\n\n  _react.default.useEffect(() => {\n    let escapeKeyListener = null;\n\n    if (_reactNative.Platform.OS === 'web') {\n      escapeKeyListener = e => {\n        if (e.key === 'Escape') {\n          if (_hooks2.keyboardDismissHandlerManager.length() > 0) {\n            const lastHandler = _hooks2.keyboardDismissHandlerManager.pop();\n\n            lastHandler();\n          }\n        }\n      };\n\n      document.addEventListener('keydown', escapeKeyListener);\n    }\n\n    return () => {\n      if (_reactNative.Platform.OS === 'web') {\n        document.removeEventListener('keydown', escapeKeyListener);\n      }\n    };\n  }, []);\n\n  return /*#__PURE__*/_react.default.createElement(_Context.HybridContext.Provider, {\n    value: contextValue\n  }, children);\n};\n\nvar _default = HybridProvider;\nexports.default = _default;\n//# sourceMappingURL=HybridProvider.js.map"]},"metadata":{},"sourceType":"script"}