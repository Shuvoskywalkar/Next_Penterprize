{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _excluded = [\"theme\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useThemeProps = useThemeProps;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.omit\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _useNativeBase = require(\"./../useNativeBase\");\n\nvar _tools = require(\"./../../theme/tools/\");\n\nvar _filterShadowProps = require(\"./../../utils/filterShadowProps\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar filterAndCalculateProps = function filterAndCalculateProps(theme, colorModeProps, componentTheme, propsReceived, windowWidth) {\n  var _ref = (0, _tools.extractInObject)(propsReceived, [\"children\", \"style\", \"onPress\", \"icon\", \"onOpen\", \"onClose\"]),\n      _ref2 = _slicedToArray(_ref, 2),\n      ignoredProps = _ref2[0],\n      props = _ref2[1];\n\n  var newProps = (0, _utils.calculateProps)(theme, colorModeProps, componentTheme, props, windowWidth);\n  var mergedProps = (0, _filterShadowProps.filterShadowProps)(newProps, ignoredProps, _reactNative.Platform.OS);\n  return (0, _tools.omitUndefined)(mergedProps);\n};\n\nfunction useThemeProps(component, propsReceived) {\n  var _useWindowDimensions;\n\n  var _ref3 = (0, _useNativeBase.useNativeBase)(),\n      theme = _ref3.theme,\n      colorModeProps = _objectWithoutProperties(_ref3, _excluded);\n\n  var componentTheme = (0, _lodash.default)(theme, \"components.\".concat(component));\n  var windowWidth = (_useWindowDimensions = (0, _reactNative.useWindowDimensions)()) === null || _useWindowDimensions === void 0 ? void 0 : _useWindowDimensions.width;\n  return filterAndCalculateProps((0, _lodash2.default)(theme, [\"components\"]), colorModeProps, componentTheme, propsReceived, windowWidth);\n}","map":{"version":3,"sources":["C:\\Users\\88017\\directory2\\my-app\\node_modules\\native-base\\lib\\commonjs\\hooks\\useThemeProps\\useProps.js"],"names":["Object","defineProperty","exports","value","useThemeProps","_lodash","_interopRequireDefault","require","_lodash2","_useNativeBase","_tools","_filterShadowProps","_utils","obj","__esModule","default","filterAndCalculateProps","theme","colorModeProps","componentTheme","propsReceived","windowWidth","ignoredProps","props","extractInObject","newProps","calculateProps","mergedProps","filterShadowProps","_reactNative","Platform","OS","omitUndefined","component","_useWindowDimensions","useNativeBase","concat","useWindowDimensions","width"],"mappings":"AAAA;;;;;;;AAEAA,MAAM,CAACC,cAAPD,CAAsBE,OAAtBF,EAA+B,YAA/BA,EAA6C;AAC3CG,EAAAA,KAAK,EAAE;AADoC,CAA7CH;AAGAE,OAAO,CAACE,aAARF,GAAwBE,aAAxBF;;AAEA,IAAIG,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAApC;;AAEA,IAAIC,QAAQ,GAAGF,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAArC;;;;AAIA,IAAIE,cAAc,GAAGF,OAAO,CAAC,oBAAD,CAA5B;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,sBAAD,CAApB;;AAEA,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,iCAAD,CAAhC;;AAEA,IAAIK,MAAM,GAAGL,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASD,sBAAT,CAAgCO,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAXD,GAAwBA,GAAxBA,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,IAAMG,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAQC,cAAR,EAAwBC,cAAxB,EAAwCC,aAAxC,EAAuDC,WAAvD,EAAuE;AAIrG,aAA6B,CAAA,GAAGX,MAAM,CAACc,eAAV,EAA2BJ,aAA3B,EAA0C,CAAC,UAAD,EAAa,OAAb,EAAsB,SAAtB,EAAiC,MAAjC,EAAyC,QAAzC,EAAmD,SAAnD,CAA1C,CAA7B;AAAA;AAAA,MAAKE,YAAL;AAAA,MAAmBC,KAAnB;;AACA,MAAIE,QAAQ,GAAI,CAAA,GAAGb,MAAM,CAACc,cAAV,EAA0BT,KAA1B,EAAiCC,cAAjC,EAAiDC,cAAjD,EAAiEI,KAAjE,EAAwEF,WAAxE,CAAhB;AACA,MAAIM,WAAW,GAAI,CAAA,GAAGhB,kBAAkB,CAACiB,iBAAtB,EAAyCH,QAAzC,EAAmDH,YAAnD,EAAiEO,YAAY,CAACC,QAAbD,CAAsBE,EAAvF,CAAnB;AACA,SAAQ,CAAA,GAAGrB,MAAM,CAACsB,aAAV,EAAyBL,WAAzB,CAAR;AACA,CARF;;AAUA,SAASvB,aAAT,CAAuB6B,SAAvB,EAAkCb,aAAlC,EAAiD;AAC/C,MAAIc,oBAAJ;;AAEA,cAGK,CAAA,GAAGzB,cAAc,CAAC0B,aAAlB,GAHL;AAAA,MACElB,KADF,SACEA,KADF;AAAA,MAEKC,cAFL;;AAKA,MAAMC,cAAc,GAAI,CAAA,GAAGd,OAAO,CAACU,OAAX,EAAoBE,KAApB,EAA2B,cAAcmB,MAAd,CAAqBH,SAArB,CAA3B,CAAxB;AAEA,MAAMZ,WAAW,GAAG,CAACa,oBAAoB,GAAI,CAAA,GAAGL,YAAY,CAACQ,mBAAhB,GAAzB,MAAqE,IAArE,IAA6EH,oBAAoB,KAAK,KAAK,CAA3G,GAA+G,KAAK,CAApH,GAAwHA,oBAAoB,CAACI,KAAjK;AAEA,SAAOtB,uBAAuB,CAAE,CAAA,GAAGR,QAAQ,CAACO,OAAZ,EAAqBE,KAArB,EAA4B,CAAC,YAAD,CAA5B,CAAF,EAA+CC,cAA/C,EAA+DC,cAA/D,EAA+EC,aAA/E,EAA8FC,WAA9F,CAA9B;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useThemeProps = useThemeProps;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\n\nvar _lodash2 = _interopRequireDefault(require(\"lodash.omit\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _useNativeBase = require(\"./../useNativeBase\");\n\nvar _tools = require(\"./../../theme/tools/\");\n\nvar _filterShadowProps = require(\"./../../utils/filterShadowProps\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst filterAndCalculateProps = (theme, colorModeProps, componentTheme, propsReceived, windowWidth) => {\n  // Extracting out children and style, as they do not contribute in props calculation\n  // This is done as these props are passed as it is later in the development\n  // Required as some of these will trigger cyclic computation which may lead to error\n  let [ignoredProps, props] = (0, _tools.extractInObject)(propsReceived, ['children', 'style', 'onPress', 'icon', 'onOpen', 'onClose']);\n  let newProps = (0, _utils.calculateProps)(theme, colorModeProps, componentTheme, props, windowWidth);\n  let mergedProps = (0, _filterShadowProps.filterShadowProps)(newProps, ignoredProps, _reactNative.Platform.OS);\n  return (0, _tools.omitUndefined)(mergedProps);\n};\n\nfunction useThemeProps(component, propsReceived) {\n  var _useWindowDimensions;\n\n  const {\n    theme,\n    ...colorModeProps\n  } = (0, _useNativeBase.useNativeBase)(); // console.log('THEME = ', theme);\n\n  const componentTheme = (0, _lodash.default)(theme, \"components.\".concat(component)); // console.log('COMPONENT THEME = ', componentTheme);\n\n  const windowWidth = (_useWindowDimensions = (0, _reactNative.useWindowDimensions)()) === null || _useWindowDimensions === void 0 ? void 0 : _useWindowDimensions.width; // To pass the component theme props and component props seperately\n\n  return filterAndCalculateProps((0, _lodash2.default)(theme, ['components']), colorModeProps, componentTheme, propsReceived, windowWidth);\n}\n//# sourceMappingURL=useProps.js.map"]},"metadata":{},"sourceType":"script"}