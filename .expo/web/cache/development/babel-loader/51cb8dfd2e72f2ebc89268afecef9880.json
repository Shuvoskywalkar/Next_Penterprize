{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useContrastText = useContrastText;\n\nvar _tinycolor = _interopRequireDefault(require(\"tinycolor2\"));\n\nvar _useToken = require(\"./useToken\");\n\nvar _hooks = require(\"../core/color-mode/hooks\");\n\nvar _NativeBaseContext = require(\"../core/NativeBaseContext\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction useContrastText(bg, color) {\n  var _ref = (0, _useToken.useToken)(\"colors\", [\"contrastThreshold\", \"darkText\", \"lightText\", bg, color !== null && color !== void 0 ? color : \"\"]),\n      _ref2 = _slicedToArray(_ref, 5),\n      contrastThreshold = _ref2[0],\n      trueDarkText = _ref2[1],\n      trueLightText = _ref2[2],\n      trueBg = _ref2[3],\n      trueColor = _ref2[4];\n\n  var suppressColorAccessibilityWarning = (0, _NativeBaseContext.useNativeBaseConfig)(\"NativeBaseConfigProvider\").config.suppressColorAccessibilityWarning;\n\n  var _ref3 = (0, _hooks.useAccessibleColors)(),\n      _ref4 = _slicedToArray(_ref3, 1),\n      accessibleColors = _ref4[0];\n\n  if ((0, _NativeBaseContext.useNativeBaseConfig)(\"NativeBaseConfigProvider\").disableContrastText) {\n    return trueColor;\n  }\n\n  if (typeof bg !== \"string\") {\n    return;\n  }\n\n  var _bg$split = bg.split(\".\"),\n      _bg$split2 = _slicedToArray(_bg$split, 2),\n      bgThemeColorVariant = _bg$split2[0],\n      bgShade = _bg$split2[1];\n\n  var textColor = !accessibleColors && bgThemeColorVariant && themeColorsThresholdShades[bgThemeColorVariant] ? getContrastThemeColor(bgThemeColorVariant, bgShade) : getAccessibleContrastColor(contrastThreshold, trueDarkText, trueLightText, trueBg, trueColor, bg, color, suppressColorAccessibilityWarning);\n  return textColor;\n}\n\nfunction getContrastThemeColor(bgThemeColorVariant, bgShade) {\n  var shadeThreshold = themeColorsThresholdShades[bgThemeColorVariant];\n\n  if (bgShade && shadeThreshold && (bgShade >= shadeThreshold && bgThemeColorVariant !== \"dark\" || bgThemeColorVariant === \"dark\" && bgShade < shadeThreshold)) {\n    return \"lightText\";\n  }\n\n  return \"darkText\";\n}\n\nfunction getAccessibleContrastColor(contrastThreshold, trueDarkText, trueLightText, trueBg, trueColor, bg, color, suppressColorAccessibilityWarning) {\n  if (typeof trueBg !== \"string\") {\n    trueBg = bg;\n  }\n\n  var trueContrastColor;\n  var contrastColorToken;\n  var darkTextConstrast = getContrastRatio(trueBg, trueDarkText);\n  var lightTextConstrast = getContrastRatio(trueBg, trueLightText);\n\n  if (darkTextConstrast >= contrastThreshold || darkTextConstrast > lightTextConstrast) {\n    trueContrastColor = trueDarkText;\n    contrastColorToken = \"darkText\";\n  } else {\n    trueContrastColor = trueLightText;\n    contrastColorToken = \"lightText\";\n  }\n\n  if (\"development\" !== \"production\") {\n    var contrast = getContrastRatio(trueBg, trueColor ? trueColor : trueContrastColor);\n\n    if (contrast < 3 && !suppressColorAccessibilityWarning) {\n      console.warn([\"NativeBase: The contrast ratio of \".concat(contrast, \":1 for \").concat(color ? color : contrastColorToken, \" on \").concat(bg), \"falls below the WCAG recommended absolute minimum contrast ratio of 3:1.\", \"https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast\"].join(\"\\n\"));\n    }\n  }\n\n  return contrastColorToken;\n}\n\nfunction getContrastRatio(foreground, background) {\n  var lumA = (0, _tinycolor.default)(foreground).getLuminance();\n  var lumB = (0, _tinycolor.default)(background).getLuminance();\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\nvar themeColorsThresholdShades = {\n  rose: 500,\n  pink: 500,\n  fuchsia: 800,\n  purple: 700,\n  violet: 600,\n  indigo: 500,\n  blue: 400,\n  lightBlue: 400,\n  cyan: 300,\n  teal: 300,\n  emerald: 300,\n  tertiary: 300,\n  green: 400,\n  lime: 600,\n  yellow: 800,\n  amber: 500,\n  orange: 500,\n  red: 500,\n  warmGray: 500,\n  trueGray: 500,\n  gray: 500,\n  coolGray: 500,\n  blueGray: 500,\n  dark: 500,\n  danger: 500,\n  error: 500,\n  success: 400,\n  warning: 500,\n  muted: 500,\n  primary: 500,\n  info: 400,\n  secondary: 500,\n  light: 500\n};","map":{"version":3,"sources":["C:\\Users\\88017\\directory2\\my-app\\node_modules\\native-base\\lib\\commonjs\\hooks\\useContrastText.js"],"names":["Object","defineProperty","exports","value","useContrastText","_tinycolor","_interopRequireDefault","require","_useToken","_hooks","_NativeBaseContext","obj","__esModule","default","bg","color","contrastThreshold","trueDarkText","trueLightText","trueBg","trueColor","useToken","suppressColorAccessibilityWarning","useNativeBaseConfig","config","accessibleColors","useAccessibleColors","disableContrastText","bgThemeColorVariant","bgShade","split","textColor","themeColorsThresholdShades","getContrastThemeColor","getAccessibleContrastColor","shadeThreshold","trueContrastColor","contrastColorToken","darkTextConstrast","getContrastRatio","lightTextConstrast","contrast","console","warn","concat","join","foreground","background","lumA","getLuminance","lumB","Math","max","min","rose","pink","fuchsia","purple","violet","indigo","blue","lightBlue","cyan","teal","emerald","tertiary","green","lime","yellow","amber","orange","red","warmGray","trueGray","gray","coolGray","blueGray","dark","danger","error","success","warning","muted","primary","info","secondary","light"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useContrastText = useContrastText;\n\nvar _tinycolor = _interopRequireDefault(require(\"tinycolor2\"));\n\nvar _useToken = require(\"./useToken\");\n\nvar _hooks = require(\"../core/color-mode/hooks\");\n\nvar _NativeBaseContext = require(\"../core/NativeBaseContext\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction useContrastText(bg, color) {\n  const [contrastThreshold, trueDarkText, trueLightText, trueBg, trueColor] = (0, _useToken.useToken)('colors', ['contrastThreshold', 'darkText', 'lightText', bg, color !== null && color !== void 0 ? color : '']);\n  const suppressColorAccessibilityWarning = (0, _NativeBaseContext.useNativeBaseConfig)('NativeBaseConfigProvider').config.suppressColorAccessibilityWarning;\n  const [accessibleColors] = (0, _hooks.useAccessibleColors)();\n\n  if ((0, _NativeBaseContext.useNativeBaseConfig)('NativeBaseConfigProvider').disableContrastText) {\n    return trueColor;\n  }\n\n  if (typeof bg !== 'string') {\n    return;\n  }\n\n  const [bgThemeColorVariant, bgShade] = bg.split('.');\n  const textColor = !accessibleColors && bgThemeColorVariant && themeColorsThresholdShades[bgThemeColorVariant] ? getContrastThemeColor(bgThemeColorVariant, bgShade) : getAccessibleContrastColor(contrastThreshold, trueDarkText, trueLightText, trueBg, trueColor, bg, color, suppressColorAccessibilityWarning);\n  return textColor;\n}\n\nfunction getContrastThemeColor(bgThemeColorVariant, bgShade) {\n  const shadeThreshold = themeColorsThresholdShades[bgThemeColorVariant];\n\n  if (bgShade && shadeThreshold && (bgShade >= shadeThreshold && bgThemeColorVariant !== 'dark' || bgThemeColorVariant === 'dark' && bgShade < shadeThreshold)) {\n    return 'lightText';\n  }\n\n  return 'darkText';\n}\n\nfunction getAccessibleContrastColor(contrastThreshold, trueDarkText, trueLightText, trueBg, trueColor, bg, color, suppressColorAccessibilityWarning) {\n  if (typeof trueBg !== 'string') {\n    trueBg = bg;\n  }\n\n  let trueContrastColor;\n  let contrastColorToken;\n  const darkTextConstrast = getContrastRatio(trueBg, trueDarkText);\n  const lightTextConstrast = getContrastRatio(trueBg, trueLightText);\n\n  if (darkTextConstrast >= contrastThreshold || darkTextConstrast > lightTextConstrast) {\n    trueContrastColor = trueDarkText;\n    contrastColorToken = 'darkText';\n  } else {\n    trueContrastColor = trueLightText;\n    contrastColorToken = 'lightText';\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    const contrast = getContrastRatio(trueBg, trueColor ? trueColor : trueContrastColor);\n\n    if (contrast < 3 && !suppressColorAccessibilityWarning) {\n      console.warn([\"NativeBase: The contrast ratio of \".concat(contrast, \":1 for \").concat(color ? color : contrastColorToken, \" on \").concat(bg), 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n    }\n  }\n\n  return contrastColorToken;\n}\n\nfunction getContrastRatio(foreground, background) {\n  const lumA = (0, _tinycolor.default)(foreground).getLuminance();\n  const lumB = (0, _tinycolor.default)(background).getLuminance();\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\nconst themeColorsThresholdShades = {\n  rose: 500,\n  pink: 500,\n  fuchsia: 800,\n  purple: 700,\n  violet: 600,\n  indigo: 500,\n  blue: 400,\n  lightBlue: 400,\n  cyan: 300,\n  teal: 300,\n  emerald: 300,\n  tertiary: 300,\n  green: 400,\n  lime: 600,\n  yellow: 800,\n  amber: 500,\n  orange: 500,\n  red: 500,\n  warmGray: 500,\n  trueGray: 500,\n  gray: 500,\n  coolGray: 500,\n  blueGray: 500,\n  dark: 500,\n  danger: 500,\n  error: 500,\n  success: 400,\n  warning: 500,\n  muted: 500,\n  primary: 500,\n  info: 400,\n  secondary: 500,\n  light: 500\n};\n//# sourceMappingURL=useContrastText.js.map"]},"metadata":{},"sourceType":"script"}