{"ast":null,"code":"function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s1, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s1 = _i.next()).done); _n = true) {\n      _arr.push(_s1.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === \"function\") {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nimport { OverlayContainer } from \"@react-native-aria/overlays\";\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { useKeyboardDismissable } from \"../../../hooks\";\nimport { ExitAnimationContext } from \"./ExitAnimationContext\";\n\nvar _s = $RefreshSig$();\n\nexport function Overlay(param) {\n  var children = param.children,\n      isOpen = param.isOpen,\n      _useRNModalOnAndroid = param.useRNModalOnAndroid,\n      useRNModalOnAndroid = _useRNModalOnAndroid === void 0 ? false : _useRNModalOnAndroid,\n      _isKeyboardDismissable = param.isKeyboardDismissable,\n      isKeyboardDismissable = _isKeyboardDismissable === void 0 ? true : _isKeyboardDismissable,\n      _animationPreset = param.animationPreset,\n      animationPreset = _animationPreset === void 0 ? \"fade\" : _animationPreset,\n      onRequestClose = param.onRequestClose,\n      style = param.style,\n      unmountOnExit = param.unmountOnExit;\n\n  _s();\n\n  var ref = _slicedToArray(React.useState(!isOpen), 2),\n      exited = ref[0],\n      setExited = ref[1];\n\n  useKeyboardDismissable({\n    enabled: isOpen && isKeyboardDismissable,\n    callback: onRequestClose ? onRequestClose : function () {}\n  });\n\n  var styleObj = _objectSpread({}, style);\n\n  if (animationPreset === \"slide\") {\n    styleObj.overflow = \"hidden\";\n    styleObj.display = \"flex\";\n  } else {\n    styleObj.display = exited && !isOpen ? \"none\" : \"flex\";\n  }\n\n  if (Platform.OS === \"android\" && useRNModalOnAndroid) {\n    return React.createElement(ExitAnimationContext.Provider, {\n      value: {\n        exited: exited,\n        setExited: setExited\n      }\n    }, React.createElement(Modal, {\n      transparent: true,\n      visible: isOpen,\n      onRequestClose: onRequestClose,\n      animationType: animationPreset\n    }, children));\n  }\n\n  if (unmountOnExit && !isOpen && exited) {\n    return null;\n  }\n\n  return React.createElement(OverlayContainer, {\n    style: _objectSpread({}, styleObj)\n  }, React.createElement(ExitAnimationContext.Provider, {\n    value: {\n      exited: exited,\n      setExited: setExited\n    }\n  }, children));\n}\n\n_s(Overlay, \"SAMSJehf4YEOFhQ/cBW/8RCig8I=\", false, function () {\n  return [useKeyboardDismissable];\n});\n\n_c = Overlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"Overlay\");\n;\n;\n\n(function () {\n  var _a, _b;\n\n  if (typeof self !== 'undefined' && '$RefreshHelpers$' in self) {\n    var currentExports = __webpack_module__.exports;\n    var prevExports = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n    self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n\n    if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n      __webpack_module__.hot.dispose(function (data) {\n        data.prevExports = currentExports;\n      });\n\n      import.meta.webpackHot.accept();\n\n      if (prevExports !== null) {\n        if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n          __webpack_module__.hot.invalidate();\n        } else {\n          self.$RefreshHelpers$.scheduleUpdate();\n        }\n      }\n    } else {\n      var isNoLongerABoundary = prevExports !== null;\n\n      if (isNoLongerABoundary) {\n        __webpack_module__.hot.invalidate();\n      }\n    }\n  }\n})();","map":{"version":3,"sources":["C:\\Users\\88017\\directory2\\my-app\\node_modules\\native-base\\lib\\module\\components\\primitives\\Overlay\\Overlay.js"],"names":["OverlayContainer","React","useKeyboardDismissable","ExitAnimationContext","Overlay","children","isOpen","useRNModalOnAndroid","isKeyboardDismissable","animationPreset","onRequestClose","style","unmountOnExit","exited","setExited","useState","enabled","callback","styleObj","overflow","display","Platform","OS","createElement","Provider","value","Modal","transparent","visible","animationType"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { OverlayContainer } from '@react-native-aria/overlays';\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport { Modal } from 'react-native';\nimport { useKeyboardDismissable } from '../../../hooks';\nimport { ExitAnimationContext } from './ExitAnimationContext';\nexport function Overlay({\n  children,\n  isOpen,\n  useRNModalOnAndroid = false,\n  isKeyboardDismissable = true,\n  //@ts-ignore\n  animationPreset = 'fade',\n  onRequestClose,\n  style,\n  unmountOnExit\n}) {\n  const [exited, setExited] = React.useState(!isOpen);\n  useKeyboardDismissable({\n    enabled: isOpen && isKeyboardDismissable,\n    callback: onRequestClose ? onRequestClose : () => {}\n  });\n  const styleObj = { ...style\n  };\n\n  if (animationPreset === 'slide') {\n    styleObj.overflow = 'hidden';\n    styleObj.display = 'flex';\n  } else {\n    styleObj.display = exited && !isOpen ? 'none' : 'flex';\n  }\n\n  if (Platform.OS === 'android' && useRNModalOnAndroid) {\n    return /*#__PURE__*/React.createElement(ExitAnimationContext.Provider, {\n      value: {\n        exited,\n        setExited\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      transparent: true,\n      visible: isOpen,\n      onRequestClose: onRequestClose,\n      animationType: animationPreset\n    }, children));\n  }\n\n  if (unmountOnExit && !isOpen && exited) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    //@ts-ignore\n    React.createElement(OverlayContainer, {\n      style: { ...styleObj\n      }\n    }, /*#__PURE__*/React.createElement(ExitAnimationContext.Provider, {\n      value: {\n        exited,\n        setExited\n      }\n    }, children))\n  );\n}\n//# sourceMappingURL=Overlay.js.map"]},"metadata":{},"sourceType":"module"}